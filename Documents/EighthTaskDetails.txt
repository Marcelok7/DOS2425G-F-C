<<<<<<< HEAD
----Objetivos da sprint:

Criar um ficheiro docker-compose para instanciar dois serviços: Web e DB e configurar o Portainer.

----Passos realizados:

1º Criar o ficheiro docker-compose.yml com a configuração inicial:
	- Dois serviços: Web e DB
	- Configuração de variáveis de ambiente e mapeamento de portas

2º Fazer o download da imagem e executar o container do Portainer:
	docker volume create portainer_data
	docker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce

3º ----Comandos executados no terminal:

dotnet publish -c Release -o ./publish

docker build -t task-management-system .

docker-compose up

docker volume create portainer_data

docker run -d -p 8000:8000 -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer


----Alteração do plano:

	- Ajuste no docker-compose.yml para corrigir erros de configuração inicial.
	- Foi necessário ajustar o mapeamento de portas e dependências entre os serviços.
	- Configuração do ambiente de desenvolvimento, adicionar a variável de conexão ao banco de dados no serviço Web.
	- Baixar e executar diretamente o Portainer

----Tarefas distribuídas:
Todos os membros participaram ativamente na realização do trabalho, utilizando um único computador para implementar e testar as configurações.
Sempre que algo dava erro, cada membro voltou ao seu computador para pesquisar possíveis soluções.

----Docker e Portainer:

O Docker permite criar, testar e executar aplicações de forma isolada em containers, garantindo que funcionem em qualquer ambiente.

O Portainer simplifica a gestão de containers, oferecendo uma interface gráfica para executar, monitorizar e configurar containers, volumes e redes.

---- Portainer:

O Portainer fornece uma interface gráfica intuitiva para gerircontainers, imagens, redes, volumes e stacks do Docker, tornando a gestão mais simples do que usar apenas o terminal.
Permite ver o estado dos containers, consumo de recursos, logs e configurações de redes, além de criar e configurar containers diretamente na interface. 
As principais vantagens incluem facilidade de uso, monitorização e diagnóstico rápido. 
Apresenta desvantagens como maior consumo de recursos e limitações de funcionalidades avançadas.
=======
----Objetivos deste exercício prático:
Criar um Docker Compose para instanciar diferentes serviços;
Automatizar a instância de diferentes containers no mesmo projeto;
Conseguir perceber como utilizar a ferramenta Portainer;
Entender as diferentes redes existentes na utilização do docker;

----Passos realizados:
1 - Criar ficheiro docker-compose.yml e colocá-lo na pasta do projeto.
2 - Certificar que temos um docker file
3 - Executar na consola o seguinte comando: docker volume create portainer_data
4 - Não tinha portainer instalado ao inserir este comando ele efetuou a instação: docker run -d -p 8000:8000 -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer 
5 - Após isso corri novamente o mesmo comando
6 - Pesquisei http://localhost:9000
7 - Defini password para o admin
8 - Acesso ao portal

----Tarefas distribuídas:
Todos os membros contribuíram para a realização deste trabalho

-----Alteração do plano:
Por algum motivo a password que definimos para o utilizador admin não estava a ser considerada correta. Então foi necessário executar estes comandos:

docker stop "id-portainer-container"
docker pull portainer/helper-reset-password
docker run --rm -v portainer_data:/data portainer/helper-reset-password

Após estas execuções foi nos retornado uma nova palavra-passe para o admin. Fazendo um start à máquina e tentando fazer o login, obtivemos sucesso.

--Portainer

----Tipo de informação que é possível analisar no Portainer

O Portainer permite analisar e gerir o ambiente Docker de forma visual.

Ele dá-nos informações sobre:
Containers;
Imagens;
Volumes;
Redes;
Stacks;

---- De que forma se torna mais simples do que a utilização do terminal
Como todas as interfaces gráficas, a interface gráfica do Postainer facilita a execução das funcionalidades sem a necessidade de inserir comandos e em poucos cliques. Além disso os logs podem ser visualizados diretamente na interface.

---- Vantagens e desvantagens do Portainer
Vantagens:
	Usabilidade - A interface é amiga e intuitiva.
	Produtividade - Reduz o tempo necessário para realizar operações comuns;
	Centralização - Permite gerir múltiplos ambientes no memso local.

Desvantagens:
	Curva de Aprendizado - Apesar de algumas funcionalidades serem simples de executar, outras podem ser menos intuitivas;
	O Portainer é um container extra que consome recursos adicionais do sistema;
	Limitações na gestão - Algumas opções avançadas do Docker podem não estar disponíveis na interface e precisam de ser efetuadas via terminal.
	

--Alternativa ao Portainer
Existe o Rancher que é uma plataforma completa de gestão de containers, voltada especialmente para Kubernetes, mas também suporta Docker. 

>>>>>>> e3266ff64c4fcaf9db093522f1bafb6ba8cbad7c
